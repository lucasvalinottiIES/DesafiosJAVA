/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import controlador.controlador;
import java.awt.Toolkit;
import modelo.Libro;
import modelo.LibroDAO;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Usuario
 */
public class Libros extends javax.swing.JFrame {

    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(Libros.class.getName());

    /**
     * Creates new form Libros
     */
    public Libros() {
        initComponents();

        LibroDAO dao = new LibroDAO();
        List<Libro> lista = dao.obtenerTodos();

        // Asignar el modelo personalizado
        LibroTableModel modelo = new LibroTableModel(lista);
        tablaLibros.setModel(modelo);

        inicializarEventosTabla();

        soloNumeros(txtAnoPublicacion);
        soloNumeros(txtISBN);

    }

    private void soloNumeros(javax.swing.JTextField campo) {
        campo.addKeyListener(new java.awt.event.KeyAdapter() {
            @Override
            public void keyTyped(java.awt.event.KeyEvent evt) {
                char c = evt.getKeyChar();
                if (!Character.isDigit(c) && c != '\b') { // si no es nÃºmero ni backspace
                    evt.consume(); // descarta el carÃ¡cter
                    Toolkit.getDefaultToolkit().beep(); // opcional: hace un beep
                }
            }
        });
    }

    private void inicializarEventosTabla() {
        tablaLibros.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                // Doble clic
                if (evt.getClickCount() == 2 && tablaLibros.getSelectedRow() != -1) {
                    int fila = tablaLibros.getSelectedRow();

                    // Obtener datos del modelo
                    int id = (int) tablaLibros.getValueAt(fila, 0);
                    String titulo = tablaLibros.getValueAt(fila, 1).toString();
                    String autor = tablaLibros.getValueAt(fila, 2).toString();
                    String ano = tablaLibros.getValueAt(fila, 3).toString();
                    String isbn = tablaLibros.getValueAt(fila, 4).toString();
                    String disponible = tablaLibros.getValueAt(fila, 5).toString();

                    // Cargar en los controles
                    txtTitulo.setText(titulo);
                    txtAutor.setText(autor);
                    txtAnoPublicacion.setText(ano);
                    txtISBN.setText(isbn);
                    chkLibroDisponible.setSelected(disponible.equalsIgnoreCase("SÃ­"));

                    // Guardar el ID en una variable oculta (por si se edita o borra)
                    txtTitulo.putClientProperty("libroId", id);
                }
            }
        });
    }

    private controlador ctrl = new controlador();

    private void cargarTablaLibros() {
        List<Libro> lista = ctrl.listarLibros();

        DefaultTableModel modelo = new DefaultTableModel(
                new Object[]{"ID", "TÃ­tulo", "Autor", "AÃ±o", "ISBN", "Disponible"}, 0
        ) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; // ðŸ”’ Bloquea ediciÃ³n de todas las celdas
            }
        };

        for (Libro l : lista) {
            modelo.addRow(new Object[]{
                l.getId(),
                l.getTitulo(),
                l.getAutor(),
                l.getAnoPublicacion(),
                l.getIsbn(),
                l.isDisponible() ? "SÃ­" : "No"
            });
        }

        tablaLibros.setModel(modelo);
    }

    private void limpiarCampos() {
        txtTitulo.setText("");
        txtAutor.setText("");
        txtISBN.setText("");
        txtAnoPublicacion.setText("");
        chkLibroDisponible.setSelected(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaLibros = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnBuscarAutor = new javax.swing.JButton();
        txtBuscarAutor = new javax.swing.JTextField();
        chkFiltroDisponibles = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        txtResetearFiltros = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        txtTitulo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtAutor = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        chkLibroDisponible = new javax.swing.JCheckBox();
        txtISBN = new javax.swing.JFormattedTextField();
        txtAnoPublicacion = new javax.swing.JFormattedTextField();
        btnAgregar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Listado de Libros");

        tablaLibros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaLibros.setRowSelectionAllowed(false);
        jScrollPane1.setViewportView(tablaLibros);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setText("Listado de Libros");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnBuscarAutor.setText("Buscar");
        btnBuscarAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarAutorActionPerformed(evt);
            }
        });

        chkFiltroDisponibles.setText("Ver solo disponibles");
        chkFiltroDisponibles.setToolTipText("");
        chkFiltroDisponibles.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chkFiltroDisponiblesStateChanged(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setText("Filtros");

        txtResetearFiltros.setText("Resetear Filtros");
        txtResetearFiltros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtResetearFiltrosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtResetearFiltros, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(txtBuscarAutor, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBuscarAutor))
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkFiltroDisponibles, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(16, 16, 16))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chkFiltroDisponibles)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscarAutor)
                    .addComponent(txtBuscarAutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(txtResetearFiltros)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("CRUD Libros");

        jLabel3.setText("Autor");

        jLabel4.setText("AÃ±o Publicacion");

        jLabel5.setText("ISBN");

        chkLibroDisponible.setText("Disponible");
        chkLibroDisponible.setToolTipText("");

        txtISBN.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        txtAnoPublicacion.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.setToolTipText("");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        jLabel6.setText("Titulo");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkLibroDisponible)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(287, 287, 287)
                                .addComponent(jLabel3))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4)
                                    .addComponent(txtAnoPublicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(txtAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtISBN, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(36, 36, 36))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(btnAgregar)
                        .addGap(18, 18, 18)
                        .addComponent(btnEditar)
                        .addGap(31, 31, 31)
                        .addComponent(btnEliminar)
                        .addGap(198, 198, 198))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel2)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtISBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAnoPublicacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addComponent(chkLibroDisponible)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar)
                    .addComponent(btnEditar)
                    .addComponent(btnEliminar))
                .addContainerGap())
        );

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel8.setText("* doble click en una fila para editar o eliminar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1040, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel8)
                        .addGap(6, 6, 6)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        try {
            // Validar campos obligatorios
            if (txtTitulo.getText().trim().isEmpty()
                    || txtAutor.getText().trim().isEmpty()
                    || txtISBN.getText().trim().isEmpty()
                    || txtAnoPublicacion.getText().trim().isEmpty()) {

                JOptionPane.showMessageDialog(this,
                        "Por favor, complete todos los campos.",
                        "Campos incompletos",
                        JOptionPane.WARNING_MESSAGE);
                return;
            }

            // Crear el objeto Libro
            Libro nuevo = new Libro();
            nuevo.setTitulo(txtTitulo.getText().trim());
            nuevo.setAutor(txtAutor.getText().trim());
            nuevo.setIsbn(txtISBN.getText().trim());
            nuevo.setAnoPublicacion(txtAnoPublicacion.getText().trim());
            nuevo.setDisponible(chkLibroDisponible.isSelected());

            // Llamar al controlador
            ctrl.agregarLibro(nuevo);

            // Refrescar la tabla
            cargarTablaLibros();

            // Limpiar campos
            limpiarCampos();

            JOptionPane.showMessageDialog(this,
                    "Libro agregado correctamente.",
                    "Ã‰xito",
                    JOptionPane.INFORMATION_MESSAGE);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                    "Error al agregar el libro: " + e.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        Object idObj = txtTitulo.getClientProperty("libroId");

        if (idObj == null) {
            JOptionPane.showMessageDialog(this,
                    "Seleccione un libro haciendo doble clic en la tabla antes de editar.",
                    "Sin selecciÃ³n",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            int id = (int) idObj;

            // Validar campos
            if (txtTitulo.getText().trim().isEmpty()
                    || txtAutor.getText().trim().isEmpty()
                    || txtISBN.getText().trim().isEmpty()
                    || txtAnoPublicacion.getText().trim().isEmpty()) {

                JOptionPane.showMessageDialog(this,
                        "Complete todos los campos antes de editar.",
                        "Campos incompletos",
                        JOptionPane.WARNING_MESSAGE);
                return;
            }

            // Crear el objeto con los nuevos datos
            Libro libroEditado = new Libro();
            libroEditado.setId(id);
            libroEditado.setTitulo(txtTitulo.getText().trim());
            libroEditado.setAutor(txtAutor.getText().trim());
            libroEditado.setIsbn(txtISBN.getText().trim());
            libroEditado.setAnoPublicacion(txtAnoPublicacion.getText().trim());
            libroEditado.setDisponible(chkLibroDisponible.isSelected());

            // Llamar al controlador
            ctrl.actualizarLibro(libroEditado);

            // Refrescar tabla
            cargarTablaLibros();

            // Limpiar campos
            limpiarCampos();

            JOptionPane.showMessageDialog(this,
                    "Libro actualizado correctamente.",
                    "Ã‰xito",
                    JOptionPane.INFORMATION_MESSAGE);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                    "Error al editar el libro: " + e.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        Object idObj = txtTitulo.getClientProperty("libroId");

        if (idObj == null) {
            JOptionPane.showMessageDialog(this,
                    "Seleccione un libro haciendo doble clic en la tabla antes de eliminar.",
                    "Sin selecciÃ³n",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        int id = (int) idObj;

        int confirm = JOptionPane.showConfirmDialog(this,
                "Â¿Seguro que desea eliminar el libro seleccionado?",
                "Confirmar eliminaciÃ³n",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE);

        if (confirm == JOptionPane.YES_OPTION) {
            try {
                ctrl.eliminarLibro(id);
                cargarTablaLibros();
                limpiarCampos();

                JOptionPane.showMessageDialog(this,
                        "Libro eliminado correctamente.",
                        "Ã‰xito",
                        JOptionPane.INFORMATION_MESSAGE);

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this,
                        "Error al eliminar el libro: " + e.getMessage(),
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void chkFiltroDisponiblesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chkFiltroDisponiblesStateChanged
        boolean filtrarDisponibles = chkFiltroDisponibles.isSelected();

        List<Libro> lista;

        // Si el checkbox estÃ¡ tildado, filtramos los disponibles
        if (filtrarDisponibles) {
            lista = ctrl.buscarPorDisponibilidad(true);
        } else {
            // Si no estÃ¡ tildado, mostramos todos los libros
            lista = ctrl.listarLibros();
        }

        // Cargar resultados en la tabla
        DefaultTableModel modelo = new DefaultTableModel(
                new Object[]{"ID", "TÃ­tulo", "Autor", "AÃ±o", "ISBN", "Disponible"}, 0
        ) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        for (Libro l : lista) {
            modelo.addRow(new Object[]{
                l.getId(),
                l.getTitulo(),
                l.getAutor(),
                l.getAnoPublicacion(),
                l.getIsbn(),
                l.isDisponible() ? "SÃ­" : "No"
            });
        }

        tablaLibros.setModel(modelo);
    }//GEN-LAST:event_chkFiltroDisponiblesStateChanged

    private void btnBuscarAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarAutorActionPerformed
        String autor = txtBuscarAutor.getText().trim();

        if (autor.isEmpty()) {
            JOptionPane.showMessageDialog(this,
                    "Ingrese el nombre del autor para realizar la bÃºsqueda.",
                    "Campo vacÃ­o",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Buscar usando el controlador
        List<Libro> lista = ctrl.buscarPorAutor(autor);

        // Si no hay resultados
        if (lista.isEmpty()) {
            JOptionPane.showMessageDialog(this,
                    "No se encontraron libros del autor: " + autor,
                    "Sin resultados",
                    JOptionPane.INFORMATION_MESSAGE);
        }

        // Mostrar los resultados en la tabla
        DefaultTableModel modelo = new DefaultTableModel(
                new Object[]{"ID", "TÃ­tulo", "Autor", "AÃ±o", "ISBN", "Disponible"}, 0
        ) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; // Bloquear ediciÃ³n
            }
        };

        for (Libro l : lista) {
            modelo.addRow(new Object[]{
                l.getId(),
                l.getTitulo(),
                l.getAutor(),
                l.getAnoPublicacion(),
                l.getIsbn(),
                l.isDisponible() ? "SÃ­" : "No"
            });
        }

        tablaLibros.setModel(modelo);
    }//GEN-LAST:event_btnBuscarAutorActionPerformed

    private void txtResetearFiltrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtResetearFiltrosActionPerformed
        chkFiltroDisponibles.setSelected(false);
        txtBuscarAutor.setText("");
        cargarTablaLibros();
    }//GEN-LAST:event_txtResetearFiltrosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new Libros().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBuscarAutor;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JCheckBox chkFiltroDisponibles;
    private javax.swing.JCheckBox chkLibroDisponible;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaLibros;
    private javax.swing.JFormattedTextField txtAnoPublicacion;
    private javax.swing.JTextField txtAutor;
    private javax.swing.JTextField txtBuscarAutor;
    private javax.swing.JFormattedTextField txtISBN;
    private javax.swing.JButton txtResetearFiltros;
    private javax.swing.JTextField txtTitulo;
    // End of variables declaration//GEN-END:variables
}
