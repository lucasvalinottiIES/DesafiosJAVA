/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

/**
 *
 * @author Usuario
 */
public class ProductosForm extends javax.swing.JFrame {

    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(ProductosForm.class.getName());

    /**
     * Creates new form ProductosForm
     */
    public ProductosForm() {
        initComponents();

        cargarCategoriasEnCombo();
        cargarProductosEnLista();

        lstProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent e) {
                if (e.getClickCount() == 2) {
                    llenarCamposDesdeLista();
                }
            }
        });
    }

    private void llenarCamposDesdeLista() {
        String itemSeleccionado = lstProductos.getSelectedValue();
        if (itemSeleccionado == null || itemSeleccionado.startsWith("No hay productos")) {
            return;
        }

        // Obtener nombre del producto a partir del texto (asumiendo formato "ID: 1 | Producto: Nombre | Precio: ...")
        try {
            // Extraer ID del producto desde el string (por ejemplo: "ID: 3 | Producto: Taladro | Precio: ...")
            String idTexto = itemSeleccionado.split("\\|")[0].replace("ID:", "").trim();
            int idProducto = Integer.parseInt(idTexto);

            // Buscar el producto real en la base
            controlador.ProductoControlador productoCtrl = new controlador.ProductoControlador();
            java.util.List<modelo.Producto> lista = productoCtrl.listarProductos();

            modelo.Producto producto = lista.stream()
                    .filter(p -> p.getId() == idProducto)
                    .findFirst()
                    .orElse(null);

            if (producto == null) {
                return;
            }

            // Llenar los campos
            txtNombreProducto.setText(producto.getNombre());
            txtPrecioProducto.setText(String.valueOf(producto.getPrecio()));
            txtStockProducto.setText(String.valueOf(producto.getStock()));

            // Seleccionar categoría correspondiente
            for (int i = 0; i < listaCategorias.size(); i++) {
                if (listaCategorias.get(i).getId() == producto.getCategoriaId()) {
                    cbCategorias.setSelectedIndex(i);
                    break;
                }
            }

        } catch (Exception ex) {
            javax.swing.JOptionPane.showMessageDialog(this, "Error al leer el producto seleccionado: " + ex.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNombreCategoria = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        btnAgregarCategoria = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNombreProducto = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtPrecioProducto = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtStockProducto = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        cbCategorias = new javax.swing.JComboBox<>();
        btnAgregar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstProductos = new javax.swing.JList<>();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Productos");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel1.setText("Gestion de Categorías");

        jLabel4.setText("Nombre");

        btnAgregarCategoria.setText("Agregar");
        btnAgregarCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarCategoriaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4)
                    .addComponent(jLabel1)
                    .addComponent(txtNombreCategoria)
                    .addComponent(btnAgregarCategoria, javax.swing.GroupLayout.DEFAULT_SIZE, 434, Short.MAX_VALUE))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(23, 23, 23)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNombreCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAgregarCategoria)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel3.setText("Gestion de Productos");

        jLabel5.setText("Nombre");

        jLabel6.setText("Precio");

        jLabel7.setText("Categoria");

        jLabel8.setText("Stock");

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5)
                            .addComponent(txtNombreProducto)
                            .addComponent(jLabel6)
                            .addComponent(txtPrecioProducto, javax.swing.GroupLayout.DEFAULT_SIZE, 428, Short.MAX_VALUE)
                            .addComponent(jLabel7)
                            .addComponent(txtStockProducto, javax.swing.GroupLayout.DEFAULT_SIZE, 428, Short.MAX_VALUE)
                            .addComponent(jLabel8)
                            .addComponent(cbCategorias, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addComponent(btnAgregar)
                .addGap(48, 48, 48)
                .addComponent(btnEditar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnEliminar)
                .addGap(69, 69, 69))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPrecioProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtStockProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbCategorias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar)
                    .addComponent(btnEliminar)
                    .addComponent(btnEditar))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel2.setText("Gestion de Productos");

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel9.setText("* doble click en un item para editar o eliminar");

        jScrollPane1.setViewportView(lstProductos);

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel10.setText("Listado de Productos");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel9))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 925, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel10))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel9)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(40, 40, 40))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(26, 26, 26)
                    .addComponent(jLabel2)
                    .addContainerGap(687, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(13, 13, 13)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(31, 31, 31)
                    .addComponent(jLabel2)
                    .addContainerGap(770, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private java.util.List<modelo.Categoria> listaCategorias;

    private void cargarCategoriasEnCombo() {
        controlador.CategoriaControlador categoriaCtrl = new controlador.CategoriaControlador();
        cbCategorias.removeAllItems();

        listaCategorias = categoriaCtrl.listarCategorias(); // guardamos las categorías reales

        if (listaCategorias.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this, "No hay categorías registradas.", "Aviso", javax.swing.JOptionPane.WARNING_MESSAGE);
        } else {
            for (modelo.Categoria c : listaCategorias) {
                cbCategorias.addItem(c.getNombre()); // solo nombre
            }
        }
    }

    private void cargarProductosEnLista() {
        controlador.ProductoControlador productoCtrl = new controlador.ProductoControlador();
        javax.swing.DefaultListModel<String> modeloLista = new javax.swing.DefaultListModel<>();

        java.util.List<String> productos = productoCtrl.mostrarProductosConCategoria();

        if (productos.isEmpty()) {
            modeloLista.addElement("No hay productos registrados.");
        } else {
            for (String p : productos) {
                modeloLista.addElement(p);
            }
        }

        lstProductos.setModel(modeloLista);
    }


    private void btnAgregarCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarCategoriaActionPerformed
        String nombre = txtNombreCategoria.getText().trim();

        if (nombre.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this, "Ingrese un nombre de categoría.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }

        controlador.CategoriaControlador categoriaCtrl = new controlador.CategoriaControlador();
        categoriaCtrl.agregarCategoria(nombre);

        javax.swing.JOptionPane.showMessageDialog(this, "Categoría agregada correctamente.");

        txtNombreCategoria.setText(""); // Limpia el campo
        cargarCategoriasEnCombo();
    }//GEN-LAST:event_btnAgregarCategoriaActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // Validar nombre
        String nombre = txtNombreProducto.getText().trim();
        if (nombre.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this, "Ingrese el nombre del producto.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Validar precio
        double precio;
        try {
            precio = Double.parseDouble(txtPrecioProducto.getText().trim());
            if (precio < 0) {
                throw new NumberFormatException();
            }
        } catch (NumberFormatException e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Ingrese un precio válido.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Validar stock
        int stock;
        try {
            stock = Integer.parseInt(txtStockProducto.getText().trim());
            if (stock < 0) {
                throw new NumberFormatException();
            }
        } catch (NumberFormatException e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Ingrese un stock válido.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Validar categoría seleccionada
        int indiceSeleccionado = cbCategorias.getSelectedIndex();
        if (indiceSeleccionado < 0 || listaCategorias == null || listaCategorias.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this, "Seleccione una categoría válida.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Obtener el ID real de la categoría desde la lista paralela
        int categoriaId = listaCategorias.get(indiceSeleccionado).getId();

        // Crear el producto usando el controlador
        controlador.ProductoControlador productoCtrl = new controlador.ProductoControlador();
        productoCtrl.agregarProducto(nombre, precio, stock, categoriaId);

        javax.swing.JOptionPane.showMessageDialog(this, "✅ Producto agregado correctamente.");

        // Limpiar los campos
        txtNombreProducto.setText("");
        txtPrecioProducto.setText("");
        txtStockProducto.setText("");
        cbCategorias.setSelectedIndex(0);

        // Actualizar la lista de productos
        cargarProductosEnLista();
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // Validar que haya un producto seleccionado
        String itemSeleccionado = lstProductos.getSelectedValue();
        if (itemSeleccionado == null || itemSeleccionado.startsWith("No hay productos")) {
            javax.swing.JOptionPane.showMessageDialog(this, "Seleccione un producto de la lista para editar.", "Aviso", javax.swing.JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            // Extraer el ID del producto desde el texto (ej: "ID: 3 | Producto: Taladro ...")
            String idTexto = itemSeleccionado.split("\\|")[0].replace("ID:", "").trim();
            int idProducto = Integer.parseInt(idTexto);

            // Validar nombre
            String nombre = txtNombreProducto.getText().trim();
            if (nombre.isEmpty()) {
                javax.swing.JOptionPane.showMessageDialog(this, "Ingrese el nombre del producto.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Validar precio
            double precio;
            try {
                precio = Double.parseDouble(txtPrecioProducto.getText().trim());
                if (precio < 0) {
                    throw new NumberFormatException();
                }
            } catch (NumberFormatException e) {
                javax.swing.JOptionPane.showMessageDialog(this, "Ingrese un precio válido.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Validar stock
            int stock;
            try {
                stock = Integer.parseInt(txtStockProducto.getText().trim());
                if (stock < 0) {
                    throw new NumberFormatException();
                }
            } catch (NumberFormatException e) {
                javax.swing.JOptionPane.showMessageDialog(this, "Ingrese un stock válido.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Obtener categoría seleccionada
            int indiceCategoria = cbCategorias.getSelectedIndex();
            if (indiceCategoria < 0 || listaCategorias == null || listaCategorias.isEmpty()) {
                javax.swing.JOptionPane.showMessageDialog(this, "Seleccione una categoría válida.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
                return;
            }
            int categoriaId = listaCategorias.get(indiceCategoria).getId();

            // Actualizar producto
            controlador.ProductoControlador productoCtrl = new controlador.ProductoControlador();
            productoCtrl.actualizarProducto(idProducto, nombre, precio, stock, categoriaId);

            javax.swing.JOptionPane.showMessageDialog(this, "✅ Producto actualizado correctamente.");

            // Limpiar los campos
            txtNombreProducto.setText("");
            txtPrecioProducto.setText("");
            txtStockProducto.setText("");
            cbCategorias.setSelectedIndex(0);

            // Refrescar lista
            cargarProductosEnLista();

        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Error al editar el producto: " + e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        String itemSeleccionado = lstProductos.getSelectedValue();
        if (itemSeleccionado == null || itemSeleccionado.startsWith("No hay productos")) {
            javax.swing.JOptionPane.showMessageDialog(this, "Seleccione un producto de la lista para eliminar.", "Aviso", javax.swing.JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            // Extraer ID del producto desde el texto
            String idTexto = itemSeleccionado.split("\\|")[0].replace("ID:", "").trim();
            int idProducto = Integer.parseInt(idTexto);

            int confirm = javax.swing.JOptionPane.showConfirmDialog(this,
                    "¿Seguro que desea eliminar este producto?",
                    "Confirmar eliminación",
                    javax.swing.JOptionPane.YES_NO_OPTION);

            if (confirm == javax.swing.JOptionPane.YES_OPTION) {
                controlador.ProductoControlador productoCtrl = new controlador.ProductoControlador();
                productoCtrl.eliminarProducto(idProducto);

                javax.swing.JOptionPane.showMessageDialog(this, "🗑️ Producto eliminado correctamente.");

                // Limpiar los campos
                txtNombreProducto.setText("");
                txtPrecioProducto.setText("");
                txtStockProducto.setText("");
                cbCategorias.setSelectedIndex(0);

                cargarProductosEnLista();
            }

        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Error al eliminar el producto: " + e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new ProductosForm().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnAgregarCategoria;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JComboBox<String> cbCategorias;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> lstProductos;
    private javax.swing.JTextField txtNombreCategoria;
    private javax.swing.JTextField txtNombreProducto;
    private javax.swing.JTextField txtPrecioProducto;
    private javax.swing.JTextField txtStockProducto;
    // End of variables declaration//GEN-END:variables
}
